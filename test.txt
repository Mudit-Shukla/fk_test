CREATE TABLE `alert_summary_table` (
  `AlertSummaryId` int NOT NULL AUTO_INCREMENT,
  `CreatedBy` int DEFAULT NULL,
  `AlertTrxnUuId` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `Status` int NOT NULL,
  `Data` blob,
  `FileName` varchar(45) DEFAULT 'alert_summary',
  `CreatedTimeStamp` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`AlertSummaryId`),
  UNIQUE KEY `Id_UNIQUE` (`AlertSummaryId`),
  UNIQUE KEY `AlertTrxnUuId_UNIQUE` (`AlertTrxnUuId`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;








WITH RECURSIVE connected_trxns AS (
    -- Base case: Start with trxn 1
    SELECT 1 AS trxn
    
    UNION
    
    -- Recursive case: Find connected trxns
    SELECT
        CASE
            WHEN cc.trxn = c1.AccountId THEN c2.AccountId
            WHEN cc.trxn = c2.AccountId THEN c1.AccountId
        END AS trxn
    FROM connected_trxns cc
    JOIN (
        -- Connections through cardId
        SELECT c1.AccountId, c2.AccountId
        FROM transaction c1
        left JOIN transaction c2 ON c1.cardId = c2.cardId AND c1.AccountId < c2.AccountId
        
        UNION
        
        -- Connections through DEVICEID
        SELECT c1.AccountId, c2.AccountId
        FROM transaction c1
        left JOIN transaction c2 ON c1.DEVICEID = c2.DEVICEID AND c1.AccountId < c2.AccountId
    ) AS connections(c1, c2)
    ON cc.trxn IN (c1, c2)
    WHERE 
        CASE
            WHEN cc.trxn = c1 THEN c2
            WHEN cc.trxn = c2 THEN c1
        END IS NOT NULL
)
SELECT ARRAY_AGG(trxn ) AS connected
FROM connected_trxns;





